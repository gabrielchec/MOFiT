from math import expimport matplotlib.pyplot as pltimport matplotlib.lines as mlinesfrom time import sleepdef u_t(u_0, v_0, a_0, dt):    return u_0 + dt * v_0 + pow(dt, 2) / 2 * a_0def u_x(x):    return exp(-100 * (x - .5) ** 2)def v(v_0, dt, a_0, a_1):    return v_0 + dt / 2 * (a_0 + a_1)def a(data, x, dx):    if N_x - 1 > x > 0:        return (data[x - 1][-1] + data[x + 1][-1] - 2 * data[x][-1]) / pow(dx, 2)    else:        return 0d_x = 0.01d_t = 0.005N_x = 101N_t = int(5 / d_t)u_data = []v_data = []a_data = []time = [t * d_t for t in range(N_t)]position = [i * d_x for i in range(N_x)]a_future = 0for i in position:    u_data.append([u_x(i)])    v_data.append([0])    a_data.append([0])for t in range(N_t):    for x in range(N_x):        a_data[x].append(a(u_data, x, d_t))    for x in range(N_x):        u_data[x].append(u_t(u_data[x][-1], v_data[x][-1], a_data[x][-1], d_x))    for x in range(N_x):        v_data[x].append(v(v_data[x][-1], d_t, a_data[x][-1], a_future))def plot_x_y(data_x, data_y):    fig, ax = plt.subplots()    ax.plot(data_x, data_y, 'b')    ax.set(xlabel='x [m]', ylabel="y [m]", title="Metoda Eulera z automatycznym doborem kroku czasowego")    # plt.savefig("Euler_auto_x_y_1.png")    plt.show()u_data_1 = []for t in range(N_t):    u_data_1.append([])    for x in range(N_x):        u_data_1[t].append(u_data[x][t])time.append(0)for i in range(N_t):    plot_x_y(position, u_data_1[i])    sleep(0.5)